trigger:
- master
- develop
- feature/*
- refs/tags/*
- releases/*

variables:
  solution: 'Thinktecture.EntityFrameworkCore.sln'
  buildConfiguration: 'Release'
  SourceBranchName: '$(Build.SourceBranchName)'

pool:
  vmImage: 'windows-latest'

steps:

- task: UseDotNet@2
  displayName: 'install .NET 6.0 runtime'
  inputs:
    packageType: runtime
    version: 6.0.x
    installationPath: $(Agent.ToolsDirectory)/dotnet
      
- task: UseDotNet@2
  displayName: 'use .NET 7.0 SDK'
  inputs:
    packageType: sdk
    version: 7.0.x
    installationPath: $(Agent.ToolsDirectory)/dotnet
      
- script: |
    echo dotnet --version
    dotnet --version
  displayName: 'print infos'

- powershell: |
    Write-Host '##vso[task.setvariable variable=ConnectionStrings:default]$(ConnectionString)'
  displayName: 'set env variables'

- powershell: |
    . ./ci/ci.ps1
    Set-VersionSuffixOnTag "$Env:BUILD_SOURCESDIRECTORY" "$Env:BUILD_SOURCEBRANCH"
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  displayName: 'set version suffix'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    configuration: '$(buildConfiguration)'
    projects: tests/**/*.csproj

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: pack
    projects: $(solution)
    arguments: --configuration $(buildConfiguration)

- task: PublishBuildArtifacts@1
  displayName: 'publish build artifacts'
  inputs:
    artifactName: 'NugetPackages'

- task: NuGetCommand@2
  displayName: 'push to nuget.org'
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'Nuget.org'
